@model ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <!-- Header -->
            <div class="mb-4">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Profile")">Profile</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Change Password</li>
                    </ol>
                </nav>
                <h2 class="text-success fw-bold">
                    <i class="bi bi-key"></i> Change Password
                </h2>
                <p class="text-muted">Update your account password for better security</p>
            </div>

            <!-- Change Password Form -->
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-shield-lock"></i> Password Security
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-action="ChangePassword" method="post">
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            <label asp-for="CurrentPassword" class="form-label">
                                Current Password <span class="text-danger">*</span>
                            </label>
                            <input asp-for="CurrentPassword" type="password" class="form-control" 
                                   placeholder="Enter your current password" required />
                            <span asp-validation-for="CurrentPassword" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label">
                                New Password <span class="text-danger">*</span>
                            </label>
                            <input asp-for="NewPassword" type="password" class="form-control" 
                                   placeholder="Enter your new password" required minlength="6" />
                            <span asp-validation-for="NewPassword" class="text-danger small"></span>
                            <small class="text-muted">Password must be at least 6 characters long</small>
                        </div>

                        <div class="mb-4">
                            <label asp-for="ConfirmPassword" class="form-label">
                                Confirm New Password <span class="text-danger">*</span>
                            </label>
                            <input asp-for="ConfirmPassword" type="password" class="form-control" 
                                   placeholder="Re-enter your new password" required minlength="6" />
                            <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                        </div>

                        <!-- Password Requirements -->
                        <div class="alert alert-info" role="alert">
                            <h6 class="alert-heading"><i class="bi bi-info-circle"></i> Password Requirements</h6>
                            <ul class="mb-0 small">
                                <li>At least 6 characters long</li>
                                <li>Contains a mix of letters and numbers (recommended)</li>
                                <li>Should not be easily guessable</li>
                            </ul>
                        </div>

                        <div class="alert alert-warning" role="alert">
                            <i class="bi bi-exclamation-triangle"></i>
                            <strong>Note:</strong> This is currently a demo. In production, this would securely update your password.
                        </div>

                        <!-- Form Actions -->
                        <div class="d-flex justify-content-between align-items-center pt-3 border-top">
                            <a href="@Url.Action("Index", "Profile")" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-check-circle"></i> Change Password
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Security Tips -->
            <div class="mt-3">
                <div class="card">
                    <div class="card-body">
                        <h6 class="card-title fw-bold">
                            <i class="bi bi-lightbulb"></i> Security Tips
                        </h6>
                        <ul class="small text-muted mb-0">
                            <li>Change your password regularly</li>
                            <li>Use a unique password that you don't use elsewhere</li>
                            <li>Never share your password with anyone</li>
                            <li>Consider using a password manager for better security</li>
                            <li>Enable two-factor authentication when available</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Client-side password match validation
        document.addEventListener('DOMContentLoaded', function() {
            const newPassword = document.getElementById('NewPassword');
            const confirmPassword = document.getElementById('ConfirmPassword');
            const form = document.querySelector('form');
            
            form.addEventListener('submit', function(e) {
                if (newPassword.value !== confirmPassword.value) {
                    e.preventDefault();
                    confirmPassword.setCustomValidity('Passwords do not match');
                    confirmPassword.reportValidity();
                } else {
                    confirmPassword.setCustomValidity('');
                }
            });
            
            confirmPassword.addEventListener('input', function() {
                if (this.value !== newPassword.value) {
                    this.setCustomValidity('Passwords do not match');
                } else {
                    this.setCustomValidity('');
                }
            });
        });
    </script>
}
