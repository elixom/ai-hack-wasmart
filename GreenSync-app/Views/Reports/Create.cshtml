@model CreateReportViewModel
@{
    ViewData["Title"] = "Report Waste";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h4 class="card-title mb-0">
                        <i class="bi bi-plus-circle"></i> Report Waste
                    </h4>
                </div>
                <div class="card-body">
                    <p class="text-muted">Help us keep your community clean by reporting waste that needs collection.</p>
                    
                    <form method="post" asp-action="Create">
                        <!-- Location Section -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">Location (Optional)</label>
                            
                            <!-- Location Input with Buttons -->
                            <div class="input-group mb-2">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <input asp-for="Location" class="form-control" placeholder="Enter street address or location name" id="locationInput">
                                <button type="button" class="btn btn-outline-success" id="searchAddressBtn" title="Search for this address">
                                    <i class="bi bi-search"></i> Search
                                </button>
                                <button type="button" class="btn btn-outline-primary" id="useLocationBtn" title="Use my current location">
                                    <i class="bi bi-crosshair"></i> Use My Location
                                </button>
                            </div>
                            <span asp-validation-for="Location" class="text-danger"></span>
                            <div class="form-text">
                                <i class="bi bi-info-circle"></i> Enter an address or click "Use My Location" to automatically detect your position
                            </div>

                            <!-- Hidden Coordinate Fields -->
                            <input asp-for="Latitude" type="hidden" id="Latitude">
                            <input asp-for="Longitude" type="hidden" id="Longitude">
                            
                            <!-- Coordinates Display -->
                            <div id="coordsDisplay" class="mt-2" style="display: none;">
                                <small class="text-muted">
                                    <i class="bi bi-pin-map"></i> 
                                    Coordinates: <span id="coordsText"></span>
                                    <button type="button" class="btn btn-sm btn-link" onclick="toggleManualCoords()">
                                        Edit manually
                                    </button>
                                </small>
                            </div>

                            <!-- Manual Coordinate Entry (Hidden by default) -->
                            <div id="manualCoordsSection" class="row mt-2" style="display: none;">
                                <div class="col-md-6 mb-2">
                                    <label class="form-label small">Latitude</label>
                                    <input type="number" step="any" class="form-control form-control-sm" id="manualLat" placeholder="e.g., 4.6097">
                                </div>
                                <div class="col-md-6 mb-2">
                                    <label class="form-label small">Longitude</label>
                                    <input type="number" step="any" class="form-control form-control-sm" id="manualLng" placeholder="e.g., -74.0817">
                                </div>
                                <div class="col-12">
                                    <button type="button" class="btn btn-sm btn-success" onclick="applyManualCoords()">
                                        <i class="bi bi-check"></i> Apply Coordinates
                                    </button>
                                    <button type="button" class="btn btn-sm btn-secondary" onclick="toggleManualCoords()">
                                        Cancel
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe the waste situation (e.g., overflowing containers, scattered debris)"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="WasteType" class="form-label">Waste Type</label>
                                <select asp-for="WasteType" class="form-select">
                                    <option value="General">General Waste</option>
                                    <option value="Recyclable">Recyclable</option>
                                    <option value="Organic">Organic</option>
                                    <option value="Hazardous">Hazardous</option>
                                    <option value="Electronic">Electronic</option>
                                    <option value="Bulky">Bulky Items</option>
                                </select>
                                <span asp-validation-for="WasteType" class="text-danger"></span>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="Priority" class="form-label">Priority</label>
                                <select asp-for="Priority" class="form-select">
                                    <option value="Low">Low</option>
                                    <option value="Medium" selected>Medium</option>
                                    <option value="High">High</option>
                                    <option value="Critical">Critical</option>
                                </select>
                                <span asp-validation-for="Priority" class="text-danger"></span>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="EstimatedVolume" class="form-label">Estimated Volume (cubic meters)</label>
                                <input asp-for="EstimatedVolume" class="form-control" step="0.1" min="0" placeholder="2.5">
                                <span asp-validation-for="EstimatedVolume" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="ImageFiles" class="form-label">Upload Images (Optional)</label>
                            <input type="file" 
                                   class="form-control" 
                                   id="ImageFiles" 
                                   name="ImageFiles" 
                                   accept="image/jpeg,image/png,image/gif,image/webp"
                                   multiple>
                            <div class="form-text">
                                <i class="bi bi-info-circle"></i> 
                                Select up to multiple images (JPG, PNG, GIF, WebP - max 10MB each)
                            </div>
                            <span asp-validation-for="ImageFiles" class="text-danger"></span>
                            
                            <!-- Image preview container -->
                            <div id="imagePreviewContainer" class="mt-3 d-none">
                                <label class="form-label small text-muted">Preview:</label>
                                <div id="imagePreviews" class="d-flex flex-wrap gap-2"></div>
                            </div>
                        </div>
                        
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i>
                            <strong>Reward:</strong> You'll earn 10 Eco-Credits for submitting this report!
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                                <i class="bi bi-arrow-left"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-send"></i> Submit Report
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Set location with coordinates
    function setLocation(location, lat, lng) {
        document.getElementById('Location').value = location;
        document.getElementById('Latitude').value = lat;
        document.getElementById('Longitude').value = lng;
        updateCoordsDisplay(lat, lng);
    }

    // Update coordinates display
    function updateCoordsDisplay(lat, lng) {
        if (lat && lng) {
            document.getElementById('coordsText').textContent = `${parseFloat(lat).toFixed(6)}, ${parseFloat(lng).toFixed(6)}`;
            document.getElementById('coordsDisplay').style.display = 'block';
        } else {
            document.getElementById('coordsDisplay').style.display = 'none';
        }
    }

    // Toggle manual coordinates section
    function toggleManualCoords() {
        const section = document.getElementById('manualCoordsSection');
        const currentLat = document.getElementById('Latitude').value;
        const currentLng = document.getElementById('Longitude').value;
        
        if (section.style.display === 'none') {
            section.style.display = 'block';
            document.getElementById('manualLat').value = currentLat;
            document.getElementById('manualLng').value = currentLng;
        } else {
            section.style.display = 'none';
        }
    }

    // Apply manual coordinates
    function applyManualCoords() {
        const lat = document.getElementById('manualLat').value;
        const lng = document.getElementById('manualLng').value;
        
        if (lat && lng) {
            document.getElementById('Latitude').value = lat;
            document.getElementById('Longitude').value = lng;
            updateCoordsDisplay(lat, lng);
            toggleManualCoords();
        } else {
            alert('Please enter both latitude and longitude');
        }
    }

    // Search address button
    document.getElementById('searchAddressBtn').addEventListener('click', function() {
        const btn = this;
        const originalHtml = btn.innerHTML;
        const address = document.getElementById('locationInput').value.trim();
        
        if (!address) {
            alert('Please enter an address to search');
            return;
        }

        // Show loading state
        btn.disabled = true;
        btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status"></span> Searching...';

        // Use Nominatim geocoding API to find coordinates
        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}&limit=1`)
            .then(response => response.json())
            .then(data => {
                if (data && data.length > 0) {
                    const result = data[0];
                    const lat = parseFloat(result.lat);
                    const lng = parseFloat(result.lon);
                    
                    // Set coordinates
                    document.getElementById('Latitude').value = lat;
                    document.getElementById('Longitude').value = lng;
                    
                    // Update location with the formatted address from geocoding
                    document.getElementById('Location').value = result.display_name;
                    
                    // Update display
                    updateCoordsDisplay(lat, lng);
                    
                    // Show success message
                    const successDiv = document.createElement('div');
                    successDiv.className = 'alert alert-success alert-dismissible fade show mt-2';
                    successDiv.innerHTML = `
                        <i class="bi bi-check-circle"></i> Address found! Coordinates: ${lat.toFixed(6)}, ${lng.toFixed(6)}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;
                    document.querySelector('.mb-4').appendChild(successDiv);
                    setTimeout(() => successDiv.remove(), 5000);
                } else {
                    alert('Address not found. Please try a different address or use "Use My Location" instead.');
                }
            })
            .catch(error => {
                console.error('Geocoding error:', error);
                alert('Unable to search for address. Please try again or use "Use My Location" instead.');
            })
            .finally(() => {
                btn.disabled = false;
                btn.innerHTML = originalHtml;
            });
    });

    // Allow Enter key to trigger search
    document.getElementById('locationInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            document.getElementById('searchAddressBtn').click();
        }
    });

    // Use current location button
    document.getElementById('useLocationBtn').addEventListener('click', function() {
        const btn = this;
        const originalHtml = btn.innerHTML;
        
        if (!navigator.geolocation) {
            alert('Geolocation is not supported by your browser');
            return;
        }

        // Show loading state
        btn.disabled = true;
        btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status"></span> Getting location...';

        navigator.geolocation.getCurrentPosition(
            function(position) {
                const lat = position.coords.latitude;
                const lng = position.coords.longitude;
                
                // Set coordinates
                document.getElementById('Latitude').value = lat;
                document.getElementById('Longitude').value = lng;
                updateCoordsDisplay(lat, lng);
                
                // Try to get address using reverse geocoding
                fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.display_name) {
                            document.getElementById('Location').value = data.display_name;
                        } else {
                            document.getElementById('Location').value = `Location at ${lat.toFixed(4)}, ${lng.toFixed(4)}`;
                        }
                    })
                    .catch(() => {
                        // Fallback if reverse geocoding fails
                        document.getElementById('Location').value = `Current Location (${lat.toFixed(4)}, ${lng.toFixed(4)})`;
                    })
                    .finally(() => {
                        btn.disabled = false;
                        btn.innerHTML = originalHtml;
                    });
            },
            function(error) {
                let errorMsg = 'Unable to get your location. ';
                switch(error.code) {
                    case error.PERMISSION_DENIED:
                        errorMsg += 'Please allow location access in your browser settings.';
                        break;
                    case error.POSITION_UNAVAILABLE:
                        errorMsg += 'Location information unavailable.';
                        break;
                    case error.TIMEOUT:
                        errorMsg += 'Location request timed out.';
                        break;
                    default:
                        errorMsg += 'An unknown error occurred.';
                }
                alert(errorMsg);
                btn.disabled = false;
                btn.innerHTML = originalHtml;
            },
            {
                enableHighAccuracy: true,
                timeout: 10000,
                maximumAge: 0
            }
        );
    });

    // Form validation - only require coordinates
    document.querySelector('form').addEventListener('submit', function(e) {
        const lat = document.getElementById('Latitude').value;
        const lng = document.getElementById('Longitude').value;
        
        if (!lat || !lng || lat === '0' || lng === '0') {
            e.preventDefault();
            alert('Please provide coordinates by using "Use My Location", searching for an address, or entering them manually.');
            return;
        }
        
        // Auto-generate location description if not provided
        const location = document.getElementById('Location').value;
        if (!location.trim()) {
            document.getElementById('Location').value = `Location at ${parseFloat(lat).toFixed(4)}, ${parseFloat(lng).toFixed(4)}`;
        }
    });

    // Initialize coordinates display if values exist
    window.addEventListener('load', function() {
        const lat = document.getElementById('Latitude').value;
        const lng = document.getElementById('Longitude').value;
        if (lat && lng) {
            updateCoordsDisplay(lat, lng);
        }
    });

    // Image file preview functionality
    document.getElementById('ImageFiles').addEventListener('change', function(e) {
        const files = e.target.files;
        const previewContainer = document.getElementById('imagePreviewContainer');
        const previewsDiv = document.getElementById('imagePreviews');
        
        // Clear previous previews
        previewsDiv.innerHTML = '';
        
        if (files.length === 0) {
            previewContainer.classList.add('d-none');
            return;
        }
        
        previewContainer.classList.remove('d-none');
        
        // Create preview for each file
        Array.from(files).forEach((file, index) => {
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    const previewItem = document.createElement('div');
                    previewItem.className = 'position-relative';
                    previewItem.style.width = '100px';
                    previewItem.style.height = '100px';
                    
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.className = 'img-thumbnail';
                    img.style.width = '100%';
                    img.style.height = '100%';
                    img.style.objectFit = 'cover';
                    img.alt = file.name;
                    
                    const caption = document.createElement('small');
                    caption.className = 'd-block text-muted text-truncate';
                    caption.style.maxWidth = '100px';
                    caption.textContent = file.name;
                    
                    previewItem.appendChild(img);
                    previewItem.appendChild(caption);
                    previewsDiv.appendChild(previewItem);
                };
                
                reader.readAsDataURL(file);
            }
        });
    });
</script>
